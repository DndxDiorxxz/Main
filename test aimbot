-- Settings Panel UI by ChatGPT

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Remove old GUI if it exists
if PlayerGui:FindFirstChild("AimbotSettingsUI") then
	PlayerGui.AimbotSettingsUI:Destroy()
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AimbotSettingsUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = PlayerGui

-- Toggle button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0, 120, 0, 40)
ToggleButton.Position = UDim2.new(0, 20, 0, 100)
ToggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
ToggleButton.Text = "⚙️ Settings"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.Gotham
ToggleButton.TextSize = 18
ToggleButton.AutoButtonColor = true
ToggleButton.Parent = ScreenGui

local UICorner = Instance.new("UICorner", ToggleButton)
UICorner.CornerRadius = UDim.new(0, 8)

-- Settings Frame
local SettingsFrame = Instance.new("Frame")
SettingsFrame.Name = "SettingsPanel"
SettingsFrame.Size = UDim2.new(0, 300, 0, 360)
SettingsFrame.Position = UDim2.new(0, 20, 0, 150)
SettingsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
SettingsFrame.Visible = false
SettingsFrame.Parent = ScreenGui

Instance.new("UICorner", SettingsFrame).CornerRadius = UDim.new(0, 10)
Instance.new("UIStroke", SettingsFrame).Color = Color3.fromRGB(90, 90, 90)

-- Scrolling list layout
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, -20, 1, -20)
ScrollingFrame.Position = UDim2.new(0, 10, 0, 10)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.ScrollBarThickness = 4
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 500)
ScrollingFrame.Parent = SettingsFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 10)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = ScrollingFrame

-- Utility: Add toggle
local function createToggle(label, settingKey)
	local Toggle = Instance.new("TextButton")
	Toggle.Size = UDim2.new(1, 0, 0, 40)
	Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Toggle.Text = label .. ": OFF"
	Toggle.TextColor3 = Color3.new(1, 1, 1)
	Toggle.Font = Enum.Font.Gotham
	Toggle.TextSize = 16
	Toggle.AutoButtonColor = true
	Toggle.Name = settingKey
	Toggle.Parent = ScrollingFrame

	Instance.new("UICorner", Toggle).CornerRadius = UDim.new(0, 6)

	Toggle.MouseButton1Click:Connect(function()
		local setting = getgenv().ExunysDeveloperAimbot.Settings
		setting[settingKey] = not setting[settingKey]
		Toggle.Text = label .. ": " .. (setting[settingKey] and "ON" or "OFF")
	end)
end

-- Utility: Add slider
local function createSlider(label, settingKey, minValue, maxValue)
	local Frame = Instance.new("Frame")
	Frame.Size = UDim2.new(1, 0, 0, 50)
	Frame.BackgroundTransparency = 1
	Frame.Parent = ScrollingFrame

	local Label = Instance.new("TextLabel")
	Label.Size = UDim2.new(1, 0, 0, 20)
	Label.Position = UDim2.new(0, 0, 0, 0)
	Label.BackgroundTransparency = 1
	Label.TextColor3 = Color3.new(1, 1, 1)
	Label.Font = Enum.Font.Gotham
	Label.TextSize = 14
	Label.Text = label .. ": " .. getgenv().ExunysDeveloperAimbot.Settings[settingKey]
	Label.TextXAlignment = Enum.TextXAlignment.Left
	Label.Parent = Frame

	local Slider = Instance.new("TextBox")
	Slider.Size = UDim2.new(1, 0, 0, 24)
	Slider.Position = UDim2.new(0, 0, 0, 24)
	Slider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	Slider.Text = tostring(getgenv().ExunysDeveloperAimbot.Settings[settingKey])
	Slider.TextColor3 = Color3.new(1, 1, 1)
	Slider.Font = Enum.Font.Gotham
	Slider.TextSize = 14
	Slider.ClearTextOnFocus = false
	Slider.Parent = Frame

	Instance.new("UICorner", Slider).CornerRadius = UDim.new(0, 5)

	Slider.FocusLost:Connect(function()
		local val = tonumber(Slider.Text)
		if val then
			val = math.clamp(val, minValue, maxValue)
			getgenv().ExunysDeveloperAimbot.Settings[settingKey] = val
			Label.Text = label .. ": " .. val
			Slider.Text = tostring(val)
		else
			Slider.Text = tostring(getgenv().ExunysDeveloperAimbot.Settings[settingKey])
		end
	end)
end

-- Add toggles
createToggle("Enabled", "Enabled")
createToggle("Team Check", "TeamCheck")
createToggle("Alive Check", "AliveCheck")
createToggle("Wall Check", "WallCheck")
createToggle("Offset Move", "OffsetToMoveDirection")

-- Add sliders
createSlider("Sensitivity", "Sensitivity", 0, 5)
createSlider("Sensitivity2", "Sensitivity2", 0.1, 10)
createSlider("Offset Increment", "OffsetIncrement", 1, 30)

-- Toggle logic
ToggleButton.MouseButton1Click:Connect(function()
	SettingsFrame.Visible = not SettingsFrame.Visible
end)
