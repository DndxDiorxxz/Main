--// SERVICES
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// ENVIRONMENT
getgenv().Aimbot = getgenv().Aimbot or {}
local Aimbot = getgenv().Aimbot

--// INITIAL STATE
local Running = false
Aimbot.LockedTarget = nil

--// DEFAULT SETTINGS
Aimbot.Settings = {
    Enabled = true,
    TeamCheck = false,
    AliveCheck = true,
    WallCheck = false,
    LockPart = "Head",
    PredictionVelocity = 0.12,
    Smoothness = 0.3
}

Aimbot.FOVSettings = {
    Enabled = true,
    Visible = true,
    Amount = 150,
    Color = Color3.fromRGB(255, 255, 255),
    LockedColor = Color3.fromRGB(255, 70, 70),
    Transparency = 0.5,
    Sides = 60,
    Thickness = 2,
    Filled = false
}

--// GUI SETUP
local screenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
screenGui.Name = "AimbotUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true

--// TOGGLE AIMBOT BUTTON
local toggleBtn = Instance.new("TextButton", screenGui)
toggleBtn.Size = UDim2.new(0, 120, 0, 40)
toggleBtn.Position = UDim2.new(1, -130, 1, -100)
toggleBtn.Text = "Aimbot: OFF"
toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.BorderSizePixel = 0
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextScaled = true

toggleBtn.MouseButton1Click:Connect(function()
    Running = not Running
    toggleBtn.Text = "Aimbot: " .. (Running and "ON" or "OFF")
    if not Running then Aimbot.LockedTarget = nil end
end)

--// LOCK TARGET BUTTON
local lockBtn = Instance.new("TextButton", screenGui)
lockBtn.Size = UDim2.new(0, 120, 0, 40)
lockBtn.Position = UDim2.new(1, -130, 1, -50)
lockBtn.Text = "ðŸŽ¯ Lock Target"
lockBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
lockBtn.TextColor3 = Color3.new(1, 1, 1)
lockBtn.BorderSizePixel = 0
lockBtn.Font = Enum.Font.GothamBold
lockBtn.TextScaled = true

lockBtn.MouseButton1Click:Connect(function()
    Aimbot.LockedTarget = nil
    local closest = nil
    local shortestDistance = Aimbot.FOVSettings.Amount or 2000
    local mousePos = UserInputService:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        local char = player.Character
        local part = char and char:FindFirstChild(Aimbot.Settings.LockPart)
        local hum = char and char:FindFirstChildOfClass("Humanoid")

        if not (part and hum and (not Aimbot.Settings.AliveCheck or hum.Health > 0)) then continue end
        if Aimbot.Settings.TeamCheck and player.Team == LocalPlayer.Team then continue end
        if Aimbot.Settings.WallCheck and #(Camera:GetPartsObscuringTarget({part.Position}, char:GetDescendants())) > 0 then continue end

        local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
        if not onScreen then continue end

        local distance = (Vector2.new(mousePos.X, mousePos.Y) - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
        if distance < shortestDistance then
            shortestDistance = distance
            closest = player
        end
    end

    if closest then
        Aimbot.LockedTarget = closest
    end
end)

--// FOV CIRCLE
Aimbot.FOVCircle = Drawing.new("Circle")
Aimbot.FOVCircle.Transparency = 0.5
Aimbot.FOVCircle.Thickness = 2
Aimbot.FOVCircle.Radius = Aimbot.FOVSettings.Amount
Aimbot.FOVCircle.Visible = true

--// AIMBOT LOOP
RunService.RenderStepped:Connect(function()
    local mousePos = UserInputService:GetMouseLocation()

    -- Update FOV
    local fov = Aimbot.FOVCircle
    local settings = Aimbot.FOVSettings
    fov.Position = Vector2.new(mousePos.X, mousePos.Y)
    fov.Radius = settings.Amount
    fov.Visible = settings.Visible and settings.Enabled
    fov.Thickness = settings.Thickness
    fov.Filled = settings.Filled
    fov.NumSides = settings.Sides
    fov.Color = settings.Color
    fov.Transparency = settings.Transparency

    if Running and Aimbot.Settings.Enabled then
        local target = Aimbot.LockedTarget
        if target and target.Character then
            local part = target.Character:FindFirstChild(Aimbot.Settings.LockPart)
            local hum = target.Character:FindFirstChildOfClass("Humanoid")
            if not part or not hum or hum.Health <= 0 then
                Aimbot.LockedTarget = nil
                fov.Color = settings.Color
                return
            end

            local velocity = part.Velocity * Aimbot.Settings.PredictionVelocity
            local predictedPos = part.Position + velocity
            local direction = (predictedPos - Camera.CFrame.Position).Unit
            local newCFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction)
            Camera.CFrame = Camera.CFrame:Lerp(newCFrame, Aimbot.Settings.Smoothness)
            fov.Color = settings.LockedColor
        else
            fov.Color = settings.Color
        end
    end
end)
