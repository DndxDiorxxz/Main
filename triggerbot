-- Settings
local HoldClick = true
local Hotkey = 't'
local ToggleOffKey = 'q'
local HotkeyToggle = true
local ContinuousShooting = true
local ShootInterval = 0.1
local HitboxRadius = 10

-- Cache services and functions
local RunService = game:GetService('RunService')
local Players = game:GetService('Players')
local Mouse = Players.LocalPlayer:GetMouse()

local mouse1press = mouse1press
local mouse1click = mouse1click
local mouse1release = mouse1release
local FindFirstChild = game.FindFirstChild
local FindFirstChildOfClass = game.FindFirstChildOfClass
local tick = tick

-- State variables
local Toggle = Hotkey ~= ''
local CurrentlyPressed = false
local lastTarget = nil
local lastIsCharacter = false
local lastShotTime = 0

-- Pre-cache common body parts for faster checking
local BODY_PARTS = {
    'Head', 'Torso', 'UpperTorso', 'Humanoid', 'Body', 'Chest', 
    'UpperBody', 'Mesh', 'Geometry', 'Arm', 'Leg', 'Hand', 
    'Foot', 'Shoulder', 'Hip'
}

-- Optimized character detection
local function isCharacter(target)
    if not target then return false end
    
    local parent = target.Parent
    if not parent then return false end
    
    -- Quick check for Humanoid first (most common case)
    if FindFirstChildOfClass(parent, 'Humanoid') then return true end
    
    -- Check for R6/R15 structure
    if FindFirstChild(parent, 'Head') then
        -- Check for torso (covers both R6 and R15)
        if FindFirstChild(parent, 'Torso') or FindFirstChild(parent, 'UpperTorso') then
            return true
        end
        
        -- Fast check for predefined body parts
        for i = 1, #BODY_PARTS do
            if FindFirstChild(parent, BODY_PARTS[i]) then
                return true
            end
        end
    end
    
    return false
end

-- Key handling
Mouse.KeyDown:Connect(function(key)
    if key == Hotkey then
        Toggle = HotkeyToggle and not Toggle or true
    elseif key == ToggleOffKey then
        Toggle = false
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
    end
end)

Mouse.KeyUp:Connect(function(key)
    if key == Hotkey and not HotkeyToggle then
        Toggle = false
    end
end)

-- Use Heartbeat instead of RenderStepped for better performance
RunService.Heartbeat:Connect(function()
    local currentTime = tick()
    
    if not Toggle then 
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
        return 
    end
    
    local target = Mouse.Target
    if not target then
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
        lastTarget = nil
        lastIsCharacter = false
        return
    end
    
    -- Only check if target changed
    if target ~= lastTarget then
        lastTarget = target
        lastIsCharacter = isCharacter(target)
    end
    
    -- Handle shooting based on detection
    if lastIsCharacter then
        if HoldClick then
            -- Continuous hold mode
            if not CurrentlyPressed then
                CurrentlyPressed = true
                mouse1press()
            end
        else
            -- Continuous click mode with interval
            if ContinuousShooting then
                if (currentTime - lastShotTime) >= ShootInterval then
                    mouse1click()
                    lastShotTime = currentTime
                end
            else
                mouse1click()
            end
        end
    elseif CurrentlyPressed then
        -- Not a character, release if holding
        CurrentlyPressed = false
        mouse1release()
        lastIsCharacter = false
    end
end)
