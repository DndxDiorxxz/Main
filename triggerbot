-- Settings
local HoldClick = true
local Hotkey = 't'
local ToggleOffKey = 'q'
local HotkeyToggle = true

-- Cache everything
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local Toggle = Hotkey ~= ''
local CurrentlyPressed = false

-- Pre-cache functions and methods
local mouse1press = mouse1press
local mouse1click = mouse1click
local mouse1release = mouse1release
local FindFirstChild = game.FindFirstChild
local FindFirstChildOfClass = game.FindFirstChildOfClass

-- Optimized humanoid detection
local function hasHumanoid(character)
    if not character then return false end
    
    -- Check for humanoid class first (fastest)
    local humanoid = FindFirstChildOfClass(character, 'Humanoid')
    if humanoid then return true end
    
    -- Check for humanoid by name
    if FindFirstChild(character, 'Humanoid') then return true end
    
    -- Quick body part checks
    local head = FindFirstChild(character, 'Head')
    if not head then return false end
    
    -- Check for common body parts that indicate a character
    if FindFirstChild(character, 'Torso') or FindFirstChild(character, 'UpperTorso') then
        return true
    end
    
    return false
end

-- Key handling with direct state changes
local keyStates = {}
Mouse.KeyDown:Connect(function(key)
    keyStates[key] = true
    
    if key == Hotkey then
        Toggle = HotkeyToggle and not Toggle or true
    elseif key == ToggleOffKey then
        Toggle = false
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
    end
end)

Mouse.KeyUp:Connect(function(key)
    keyStates[key] = false
    if key == Hotkey and not HotkeyToggle then
        Toggle = false
    end
end)

-- Cache target checking variables
local lastTarget = nil
local lastIsCharacter = false

-- Main loop with optimized target checking
RunService.RenderStepped:Connect(function()
    if not Toggle then 
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
        return 
    end
    
    local target = Mouse.Target
    if target == lastTarget then
        -- Use cached result for same target
        if lastIsCharacter then
            if HoldClick then
                if not CurrentlyPressed then
                    CurrentlyPressed = true
                    mouse1press()
                end
            else
                mouse1click()
            end
        elseif HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
        return
    end
    
    lastTarget = target
    lastIsCharacter = false
    
    if not target then
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
        return
    end
    
    local parent = target.Parent
    if not parent then
        if HoldClick and CurrentlyPressed then
            CurrentlyPressed = false
            mouse1release()
        end
        return
    end
    
    -- Optimized character detection with limited depth
    local current = parent
    local depth = 0
    
    while current and depth < 3 do  -- Reduced depth from 4 to 3
        if hasHumanoid(current) then
            lastIsCharacter = true
            break
        end
        current = current.Parent
        depth += 1
    end
    
    if lastIsCharacter then
        if HoldClick then
            if not CurrentlyPressed then
                CurrentlyPressed = true
                mouse1press()
            end
        else
            mouse1click()
        end
    elseif HoldClick and CurrentlyPressed then
        CurrentlyPressed = false
        mouse1release()
    end
end)
